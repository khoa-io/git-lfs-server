name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_VERSION: "${{ github.sha }}"
  BUILD_NUMBER: "${{ github.run_number }}"

jobs:
  build-binaries-linux-amd64:
    name: "Build binaries for Linux AMD64"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [amd64]
    container:
      image:
        amd64/dart
      options: --tty --platform linux/${{ matrix.arch }}
    env:
      BUILD_OS: "linux"
      BUILD_ARCH: "${{ matrix.arch }}"
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
          architecture: x64

      - name: Install dependencies
        run: dart pub get

      - name: Create build folder
        run: mkdir -p build

      - name: Build git-lfs-authenticate
        run: dart compile exe bin/git_lfs_authenticate.dart --output build/git-lfs-authenticate
      - uses: actions/upload-artifact@v3
        with:
          name: git-lfs-authenticate-${{ env.BUILD_OS }}-${{ env.BUILD_ARCH }}-${{ env.BUILD_NUMBER }}-${{ env.BUILD_VERSION }}
          path: build/git-lfs-authenticate

      - name: Build git-lfs-server
        run: dart compile exe bin/git_lfs_server.dart --output build/git-lfs-server
      - uses: actions/upload-artifact@v3
        with:
          name: git-lfs-server-${{ env.BUILD_OS }}-${{ env.BUILD_ARCH }}-${{ env.BUILD_NUMBER }}-${{ env.BUILD_VERSION }}
          path: build/git-lfs-server

  build-binaries-linux-arm64:
    name: "Build binaries for Linux ARM64"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [arm64]
    container:
      image:
        arm64v8/dart
      options: --tty --platform linux/${{ matrix.arch }}
    env:
      BUILD_OS: "linux"
      BUILD_ARCH: "${{ matrix.arch }}"
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
          architecture: arm64

      - name: Install dependencies
        run: dart pub get

      - name: Create build folder
        run: mkdir -p build

      - name: Build git-lfs-authenticate
        run: dart compile exe bin/git_lfs_authenticate.dart --output build/git-lfs-authenticate
      - uses: actions/upload-artifact@v3
        with:
          name: git-lfs-authenticate-${{ env.BUILD_OS }}-${{ env.BUILD_ARCH }}-${{ env.BUILD_NUMBER }}-${{ env.BUILD_VERSION }}
          path: build/git-lfs-authenticate

      - name: Build git-lfs-server
        run: dart compile exe bin/git_lfs_server.dart --output build/git-lfs-server
      - uses: actions/upload-artifact@v3
        with:
          name: git-lfs-server-${{ env.BUILD_OS }}-${{ env.BUILD_ARCH }}-${{ env.BUILD_NUMBER }}-${{ env.BUILD_VERSION }}
          path: build/git-lfs-server

  build-images:
    name: "Build images"
    needs:
      - build-binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    env:
      BUILD_OS: "linux"
      BUILD_ARCH: "${{ matrix.arch }}"
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: git-lfs-authenticate-${{ env.BUILD_OS }}-${{ env.BUILD_ARCH }}-${{ env.BUILD_NUMBER }}-${{ env.BUILD_VERSION }}
          path: build/git-lfs-authenticate
      - uses: actions/download-artifact@v3
        with:
          name: git-lfs-server-${{ env.BUILD_OS }}-${{ env.BUILD_ARCH }}-${{ env.BUILD_NUMBER }}-${{ env.BUILD_VERSION }}
          path: build/git-lfs-server
      - name: List binaries
        run: ls -la build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ghcr.io/${{ github.actor }}/amz-git-mirroring:${{ env.BUILD_VERSION }}
